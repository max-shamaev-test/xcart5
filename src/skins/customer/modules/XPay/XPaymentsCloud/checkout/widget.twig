{##
 # Connect widget
 #
 #}
<div id="xpayments-iframe-container"></div>
<script>
function createXPaymentsWidget()
{
  window.xpaymentsWidgetInstance = new XPaymentsWidget();

  window.xpaymentsWidgetInstance.init({
    account: '{{ this.getCart().getPaymentMethod().getSetting('account') }}',
    widgetKey: '{{ this.getCart().getPaymentMethod().getSetting('widget_key') }}',
    container: '#xpayments-iframe-container',
    form: 'form.place',
    showSaveCard: {% if this.isAnonymousNotRegisters() %}false{% else %}true{% endif %},
    customerId: '{{ this.getXpaymentsCustomerId() }}',
    order: {
      total: '{{ this.getCart().getTotal() }}',
      currency: '{{ this.getCart().getCurrency().getCode() }}'
    },
    language: '{{ this.getCurrentLanguage().getCode() }}',
  }).on('fail', function() {
     {% if 'fast-lane' == this.config.General.checkout_type %}
       Checkout.instance.finishLoadAnimation();
     {% else %}
       jQuery('.steps').get(0).loadable.unshade();
       jQuery('.cart-items').get(0).loadable.unshade();
       jQuery('.place-order').removeClass('submitted');
     {% endif %}
     core.trigger('checkout.common.anyChange');
     core.trigger('checkout.common.unblock');
  }).on('alert', function(params) {
     setTimeout(function () {
       if ('popup' === params.type) {
         core.trigger('message', {type: 'info', message: params.message});
       } else {
         core.showError(params.message);
       }
     }, 500)
  });

  core.bind('xpaymentsAnonymousRegister', updateXPaymentsSaveCard);
  core.bind('xpaymentsTotalUpdate', updateXPaymentsTotal);
  {% if 'fast-lane' == this.config.General.checkout_type %}
    core.bind('checkout.common.ready', flcXPaymentsSubmit);
    core.bind('fastlane_section_switched', resizeXPaymentsWidget);
  {% endif %}

  return getXPaymentsWidget(false);
}

{% if 'fast-lane' == this.config.General.checkout_type %}
function flcXPaymentsSubmit(event, state)
{
  {## FLC - redefine default form action #}
  var widget = getXPaymentsWidget();
  if (widget) {
    state.state = false;
    setTimeout(Checkout.instance.startLoadAnimation, 0);
    core.trigger('checkout.common.block');
    widget.submit();
  }
}

function resizeXPaymentsWidget(event, data)
{
  if ('undefined' !== typeof data.newSection && 'payment' === data.newSection.name) {
    var widget = getXPaymentsWidget();
    widget && widget.refresh();
  }
}
{% endif %}

function updateXPaymentsTotal(event, data)
{
  var widget = getXPaymentsWidget();
  widget && widget.setOrder(data.total, data.currency);
}

function updateXPaymentsSaveCard(event, data)
{
  var widget = getXPaymentsWidget();
  widget && widget.showSaveCard(data.value);
}

function getXPaymentsWidget(onlyValid = true)
{
  if (
      'undefined' !== typeof window.xpaymentsWidgetInstance
      && (!onlyValid || window.xpaymentsWidgetInstance.isValid())
  ) {
    return window.xpaymentsWidgetInstance;
  } else {
    return false;
  }
}

function loadXPaymentsWidget()
{
  jQuery(function() {
    var widget = getXPaymentsWidget(false);
    if (!widget) {
        widget = createXPaymentsWidget();
    }
    widget.load();
  });
}

if ('undefined' === typeof jQuery || 'undefined' === typeof core) {
  document.addEventListener('DOMContentLoaded', function() {
    loadXPaymentsWidget();
    jQuery(function() {
      core.bind('checkout.paymentTpl.loaded', loadXPaymentsWidget);
    });
  });
} else {
  core.bind('checkout.paymentTpl.loaded', loadXPaymentsWidget);
}
</script>

